accelerator:
  displayName: Backend API-driven Service
  description: Accelerator to create Backend API service for stream processing using Spring Boot
  iconUrl: https://raw.githubusercontent.com/simple-starters/icons/master/icon-boot.png
  tags:
  - cloud-native-devs
  - spring

  options:
  
  #deployment
  - name: appDeploymentType
    label: Deployment environment
    description: Type of deployment configurations
    required: true
    defaultValue: tap
    inputType: select
    choices:
      - value: tap
        text: Tanzu App Platform workload
      #- value: k8s
      #  text: K8s deployment
     # - value: k8sSkaffold
      #  text: K8s deployment with Skaffold configs
      - value: cf
        text: Tanzu App Service manifest
  #- name: addAlv
  #  label: Add application live view
  #  description: Add application live view sidecar to your deployment config
  #  inputType: toggle 
  #  defaultValue: false
  #  dataType: boolean
  #  dependsOn:
  #    name: appDeploymentType
  #    value: k8s
        
  - name: gitRepo
    label: Git repo
    inputType: text
    required: true
    dataType: string
    defaultValue: https://github.com/dektlong/my-backend
  
  - name: javaVersion
    label: Java version
    description: Java runtime version
    required: true
    defaultValue: "11"
    inputType: select
    choices:
      - value: "11"
        text: 11 
      - value: "17"
        text: 17 (dev only)
  
  #data services
  - name: addDB
    label: Bind a database service
    description: Add a service request to a database
    inputType: toggle
    display: true
    dataType: boolean
    defaultValue: false
  - name: dbType
    label: Database service type
    description: Select the database service type
    dependsOn:
      name: addDB
    inputType: select
    defaultValue: PostgresCluster
    choices:
      - value: PostgresCluster
        text: PostgreSQL
      - value: RDSConnector
        text: Amazon RDS
  - name: dbName
    label: Database service name
    description: Database service name
    defaultValue: mydb
    dependsOn:
      name: addDB
      
  - name: addMsg
    label: Bind a messaging service 
    description: Add a service request to a message queue
    inputType: toggle
    display: true
    dataType: boolean
    defaultValue: false
  - name: msgType
    label: Messaging service type
    description: Select the message queue service type
    dependsOn:
      name: addMsg
    inputType: select
    defaultValue: RabbitMQCluster
    choices:
      - value: RabbitMQCluster
        text: RabbitMQ
      - value: SQSConnector
        text: Amazon SQS
  - name: msgName
    label: Messaging service name
    description: Message service name
    defaultValue: myqueue
    dependsOn:
      name: addMsg
      
  - name: addCache
    label: Bind a caching service 
    description: Add a service request to a caching service
    inputType: toggle
    display: true
    dataType: boolean
    defaultValue: false
  - name: cacheType
    label: Caching service type
    description: Select the cachingservice type
    dependsOn:
      name: addCache
    inputType: select
    defaultValue: RedisCluster
    choices:
      - value: RedisCluster
        text: Redis
      - value: ElastiCacheConnector
        text: Amazon ElastiCache
  - name: cacheName
    label: Caching service name
    description: Caching service name
    defaultValue: mycache
    dependsOn:
      name: addCache
      
  #apis groups
  - name: firstApiGroup
    label: First level API group
    description: Name of the first level API group
    defaultValue: apiGroup1
    required: true
    defaultValue: apiGroup1
  - name: secondApiGroup
    label: Second level API group
    display: true
    description: Name of the second API group
    defaultValue: apiGroup2
  - name: thirdApiGroup
    label: Third  level API group
    description: Name of the third API group
    defaultValue: apiGroup3
  - name: forthApiGroup
    label: Forth level API group
    description: Name of the forth API group
    defaultValue: apiGroup4
  - name: fifthApiGroup
    label: Fifth level API group
    description: Name of the Fifth API group
    defaultValue: apiGroup5

  
      
      
engine:
  merge:
    #generic transformation
    - includes: ["**"]
      excludes: [ "config/**", "src/main/java/io/storebackend/api/data/*" ]
      chain:
        - type: ReplaceText
          substitutions:
            - text: app-name
              with: "#artifactId"
  #deployment transformations
    - includes: [ "config/k8s/gateway-dev.yaml", "config/k8s/routes.yaml"]
      condition: "#appDeploymentType != 'cf'"
      chain:
        - type: YTT
    - includes: [ "config/k8s/workload.yaml" ]
      condition: "#appDeploymentType == 'tap'"
      chain:
        - type: YTT
    - includes: [ "config/k8s/deployment.yaml" ]
      condition: "#appDeploymentType == 'k8s'"
      chain:
        - type: YTT
    - includes: [ "config/k8s/deployment.yaml", "config/k8s/skaffold.yaml" ]
      condition: "#appDeploymentType == 'k8sSkaffold'"
      chain:
        - type: YTT
    - includes: [ "config/cf/manifest.yaml"]
      condition: "#appDeploymentType == 'cf'"
      chain:
        - type: YTT
    - includes: [ "config/cf/*.json" ]
      condition: "#appDeploymentType == 'cf'"
      chain:
        - type: ReplaceText
          substitutions:
          - text: app-name
            with: "#artifactId"
          - text: api-group1
            with: "#firstApiGroup"
          - text: api-group2
            with: "#secondApiGroup"
    
    #data entity transformations
    - includes: [ "src/main/java/io/storebackend/api/data/RabbitMQTemplate.java" ]
      condition: "#msgType == 'RabbitMQCluster'"
      chain:
        - type: ReplaceText
          substitutions:
            - text: mybean
              with: "#msgName"
    - includes: [ "src/main/java/io/storebackend/api/data/RedisTemplate.java" ]
      condition: "#cacheType == 'Redisluster'"
      chain:
        - type: ReplaceText
          substitutions:
            - text: mybean
              with: "#cacheName"
    - includes: [ "src/main/java/io/storebackend/api/data/PostgresTemplate.java" ]
      condition: "#dbType == 'PostgresCluster'"
      chain:
        - type: ReplaceText
          substitutions:
            - text: mybean
              with: "#dbName" 
  
    
