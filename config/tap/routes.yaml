#@ load("@ytt:data", "data")
---
apiVersion: "tanzu.vmware.com/v1"
kind: SpringCloudGatewayRouteConfig
metadata:
  name: #@ data.values.artifactId + "-routes"
spec:
  service: 
    name: #@ data.values.artifactId + "-service"
  routes:
    - predicates:
        - #@ "Path=/api/" + data.values.readAPIs[0]
        - Method=GET
      filters:
        - RateLimit=2,10s
      tags:
        - data retrieval APIs
      title: "open api for read-only functionality"
      description: "open api for read only interactions with the backend service"
    - predicates:
        - #@ "Path=/api/" + data.values.readAPIs[0]+ "/protected"
        - Method=GET
      filters:
        - CircuitBreaker="myCircuitBreaker,forward:/inCaseOfFailureUseThis"
      ssoEnabled: true
      title: "open api for protecetd read-only functionality"
      description: "open api for protected read only interactions with SSO and Circuit Breaker"
      tags:
        - data retrieval APIs
    - predicates:
        - #@ "Path=/api/" + data.values.writeAPIs[0] + "/{itemId}/" + "/update"
        - Method=POST,PUT,DELETE
      ssoEnabled: true
      tokenRelay: true
      tags:
        - data manipulation APIs
      title: "SSO protected api for write functionality"
      description: "SSO protected api for write/delete/update interactions with the backend service"
      model:
        requestBody:
          description: #@ "Manage " + data.values.writeAPIs[0]
          content:
            'application/json':
              schema:
                type: object
                description: #@ data.values.writeAPIs[0] + " schema"
                properties:
                  itemName:
                    type: string
                  description:
                    type: string
                    format: email
                  notes:
                    type: string
                required: [ "name", "description" ]
