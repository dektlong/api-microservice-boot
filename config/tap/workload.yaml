#@ load("@ytt:data", "data") 
--- 
apiVersion: carto.run/v1alpha1
kind: Workload
metadata:
  name: #@ data.values.artifactId
  labels:
    app.tanzu.vmware.com/workload-type: dekt-backend
    apps.tanzu.vmware.com/has-tests: "true"
    app.kubernetes.io/part-of: #@ data.values.parentApp
    #@ if data.values.newAPIs:
    apis.apps.tanzu.vmware.com/register-api: "true"
    #@ end

spec:
  source:
    git:
      url: #@ "https://github.com/dektlong/" + data.values.artifactId
      ref:
        branch: dev
  
  #@ if data.values.addDataServices:
  serviceClaims:
    - name: #@ data.values.dbType + "-claim"
      ref:
        apiVersion: services.apps.tanzu.vmware.com/v1alpha1
        kind: ResourceClaim
        name: #@ data.values.dbName + "-db"
    - name: #@ data.values.msgType + "-claim"
      ref:
        apiVersion: rabbitmq.com/v1beta1
        kind: RabbitmqCluster
        name: #@ data.values.msgName + "-queue"
  #@ end
  #@ if data.values.newAPIs:
  params:
    - name: api_descriptor
      value: 
        type: #@ data.values.apiType
        location: 
          path: config/tap/apis
        owner: #@ data.values.apiOwner
        system: #@ data.values.parentApp
        description: #@ "A set of API endpoints to manage the resources within the " + data.values.artifactId + " app."
 #@ end
